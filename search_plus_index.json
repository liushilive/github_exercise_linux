{"index.html": {"url": "index.html", "title": "介绍", "keywords": "", "body": "Linux相关我只是搬运工，如果文中有冒犯到你的地方，请告知我删除内容，或添加来源。"}, "ms/linuxtutorial/index.html": {"url": "ms/linuxtutorial/index.html", "title": "Linux 教程", "keywords": "", "body": "Linux教程写给我的高阶学生！本教程旨在为你提供如何使用终端打下坚实基础，让计算机为你做有用的工作。你最终不会成为一名Unix大师，但如果你想要的话，那么你将会顺利地拥有正确的知识和技能来帮助你（你应该这样做，因为这会让你更加精彩）。在这里，你将学习Linux命令行（Bash）掌握测试人员应该掌握的基本知识。它包含清晰的描述，命令大纲，示例，快捷方式和最佳实践。起初，Linux命令行似乎令人生畏，复杂和可怕。它实际上非常简单直观（一旦你理解了正在发生的事情），一旦你完成了本教程，你就会明白发生了什么。你可能已经想到的一个问题是“我为什么要费心学习命令行？图形用户界面更容易，我已经可以完成我需要的大部分工作。”在某种程度上，你是对的，我绝不建议你放弃GUI。有些任务最适合GUI，文字处理和视频编辑就是很好的例子。同时，一些任务更适合命令行，数据操作（报告）和文件管理是一些很好的例子。但是，如果你想要更多的钱，就请耐心的学！1.本教程结构学习Linux命令行的最佳方法是完成一系列小巧，易于管理的步骤。本教程是这样组织的，每个部分都基于前面部分中学到的知识和技能。如果按顺序完成它们，请完整阅读并在命令行中练习，我相信你应该有一个相当愉快和顺利的旅程掌握Linux命令行。当一个学生遇到麻烦时，我发现并不是因为他们没有能力，而是他们很懒，而且没有完全阅读材料、没有动手。本教程结构如下：获得Linux命令行基本导航关于文件手册页文件操作Vi通配符权限过滤器Grep管道和重定向进程管理Bash脚本备忘录你做得多好以及走多远取决于你是多么不自在。2.规则我将在以下内容中引用Linux，每当我这样做时，假设我实际上在说Unix/Linux。Linux是Unix的一个分支，其行为几乎完全相同。本教程以当前最新版本CentOSMinimalv7.6.1810为例。每当你看到&lt;something&gt;时，着意味着你要用有用的东西替换它。替换整个事物（包括&lt;和&gt;）。如果你看到&lt;n&gt;之类的内容，则通常意味着将其替换为数字。每当你看到[something]时，这通常意味着这是可选的，当你运行命令时，可能会放入某些内容或将其留下。3.解决问题和创造性思维如果你希望通过Linux命令行取得成功，那么你需要做两件事：解决问题和创造性思维。以下是一些帮助你的基本指示。探索和实验请记住，你正在学习一组构建模块，使用它们几乎可以构建任何东西。你找到的示例旨在说明它们的工作方式，而不是你使用它们的唯一方法。我鼓励你调整示例并了解它们的行为方式。这将使你更好地了解它们的工作方式。请不要提问如果...怎么办？和我能...？，我的回答只有一个：你不会试一试？你真正得到的最糟糕的情况是是一条错误信息。在这种情况下，你应该阅读错误消息以了解它为什么不起作用，然后再进行一次。请仔细阅读不要跳过细节。我不得不强调这一点，因为大家都喜欢一步登天。细节很重要，通常是你的命令工作和不工作之间的区别。如果某些东西不起作用，那么仔细阅读材料，重新查看你输入的内容，以确保你没有敲出愚蠢的错字。所以一般的方法是：创建一个假设。运行你的命令来测试此假设。观察输出。如果这是你期待的，那很好。如果没有，那么继续。分析输出并相应地调整你的理解。反复重试，直到你得到你想要的东西。4.声明任何人都可以链接使用引入本网站上的内容。如果你是教师，学者，经理或培训师，并希望在课程或培训中使用此材料，欢迎你链接到这些页面并在此处推荐你的学生或在课程中展示，但请不要只是复制我的材料。我花了相当多的时间和精力来创建这个资源，所以请冷静下来并做正确的事情。5.免责声明不幸的是，在我们现在生活的这个疯狂和诉讼的世界里，人们必须保持自己的身份，所以这里是我的免责声明。据我所知，这些页面中包含的材料是正确的。但我不保证。根据从这里获得的知识，我对你可能造成的任何伤害不承担任何责任（尽管这样做的可能性相对较小）。如果本材料出现任何纰漏与错误，请指导我修正。Email：liushilive@outlook.com6.更新由于时间关系，本教程并未完结，处于持续更新中。我会尽快完结"}, "ms/linuxtutorial/linuxinstall.html": {"url": "ms/linuxtutorial/linuxinstall.html", "title": "获得 Linux", "keywords": "", "body": "获得Linux学习Linux就像骑自行车一样，只有通过实际操作才能变得精通。所以在开始之前，请确保你可以访问终端。幸运的是，你可以在这里找到几种选择。如果你在Mac上，那么你很幸运，你已经有了一个终端。另一种选择是运行Linux。Linux是完全免费的，那里有许多的发行版。我推荐Ubuntu（非常受欢迎且易于使用）和CentOS（我个人最喜欢的）。如果采用这种方法，那么有几种方法可以实现。如果你有一台备用机器，那么你就可以安装它。你也可以创建双启动系统（即计算机上安装了Windows和Linux，你可以选择在启动时运行的系统）。大多数现代Linux发行版都会在你安装它时为你创建（也可以调整现有的Windows分区大小）。在执行此方法之前，请备份所有重要文件（我从未见过它失败，新手除外）。你可以在虚拟机中运行Linux。VirtualBox是一个很好用的工具，它也完全免费。VMwareWorkstationPro（我喜欢）也是很棒的工具，但是需要授权。假设你可以在工作时远程访问计算机。如果你这样做，那么远程登录这些以访问终端也是一种选择。如果，你已经拥有了Linux，请跳过此节，否则请继续。1.获得CentOS进入官网官网：https://www.centos.org进入下载页面CentOS提供两个镜像下载DVDISO此映像包含安装程序以及可在交互式安装期间安装的所有软件包的集合。这是大多数用户的推荐下载。MinimalISO包含安装程序和一组最小的软件包，可用于安装非常基本的CentOS系统。然后，你可以使用Yum从更新存储库下载其他软件包。本教程的选择！选择镜像下载在下载列表中选择任意一个链接都可以下载。下载后，你将得到一个iso文件本教程采用VMwareWorkstationPro进行虚拟化部署CentOS，如需真机部署或其他虚拟化软件部署，请自行GOOGLE2.VM硬件规划请预备不小于2G硬盘空间如果C盘剩余空间不少于10G的请默认路径安装，切记C盘速度最快！电脑是连接路由器的可以考虑选择桥接网络，电脑拨号上网之类的选择NAT完成本教程学习，5G足矣移除USB控制器、声卡、打印机。关闭回到上一界面，点完成3.系统安装鼠标点击去，上下键移动选择：InstallCentOS7，回车确认等待引导完毕，进入安装界面不需要做任何配置，直接点回到上一界面点击等待安装完毕等待重启完毕，看到登录界面Linux下输入密码无回显，如果为数字，请勿使用小键盘输入。输入完毕后回车至此系统安装完毕，请输入poweroff回车，关机。4.快照管理为了防止系统玩坏需要重新安装导致时间浪费，应采用快照功能保存现场拍摄快照后，如CentOS被玩坏了，可通过快照管理功能还原快照"}, "ms/linuxtutorial/commandline.html": {"url": "ms/linuxtutorial/commandline.html", "title": "命令行", "keywords": "", "body": "命令行Linux有一个图形用户界面，它的工作方式非常类似于你熟悉的其他系统上的GUI，如Windows和OSX。本教程不会关注这些。本教程将重点关注运行Bash的命令行（也称为终端）。命令行是一只非常有趣的野兽，如果你之前没有使用过，可能会有点令人生畏。别担心，通过一些练习，你很快就会把它看成是你的朋友。开启Linux系统，登录，映入眼帘的就是命令行窗口1.那他们到底是什么？命令行或终端是系统的基于文本的接口。你可以通过在键盘来输入命令，并且以文本给出反馈。命令行通常会向你显示提示。在你键入时，它将在提示后显示。大多数情况下，你将发出命令。这是一个例子：[root@localhost~]#ls-l/root总用量4-rw-------.1rootroot12415月813:09anaconda-ks.cfg[root@localhost~]#让我们分解一下：第1行向我们提示了一个提示符[root@localhost~]#之后我们输入了一个命令ls。通常，命令始终是你键入的第一个内容。之后我们有了所谓的命令行参数-l/root。需要注意的是，这些是用空格分隔的（命令和第一个命令行参数之间也必须有空格）。第一个命令行参数-l也称为选项。选项通常用于修改命令的行为。选项通常在其他参数之前列出，通常以短划线-开头。第2-3行命令输出。大多数命令产生输出，它将在命令发出后直接列出。其他命令只执行其任务，除非出现错误，否则不显示任何信息。第4行提示上一个命令已经运行完毕，命令行做好接受下一个命令的准备。你的终端可能没有行号。我只是用于更好的解释。2.Bash在终端中，你拥有所谓的shell。这是操作系统的一部分，它定义了终端的行为方式，并为你运行（或执行）命令。有各种各样的shell可用，但最常见的一种叫做bash。本教程假设你使用bash作为shell。如果你想知道你正在使用哪个shell，可以使用名为echo的命令来显示一个声明当前shell的系统变量。echo是一个用于显示消息的命令。[root@localhost~]#echo$SHELL/bin/bash[root@localhost~]#只要它以bash结尾的东西打印出来，那么一切都很好。3.快捷方式终端可能看起来令人生畏但不担心。Linux充满了快捷方式，可以让你的生活更轻松。在本教程中，你将了解其中的几个。记下它们不仅可以让你的生活更轻松，而且还可以帮助你避免犯下诸如拼写错误之类的愚蠢错误。这是你的第一个快捷方式。输入命令时，它们实际存储在历史记录中。你可以使用向上和向下箭头键遍历此历史记录。因此，不必费心重新输入你之前输入的命令，通常只需按几次向上箭头即可。你还可以使用向左和向右箭头键编辑这些命令，将光标移动到所需的位置。"}, "ms/linuxtutorial/navigation.html": {"url": "ms/linuxtutorial/navigation.html", "title": "基本导航", "keywords": "", "body": "基本导航在本节中，我们将学习在系统中移动的基础知识。许多任务依赖于能够到达或引用系统中的正确位置。因此，这些东西真正构成了能够在Linux中有效工作的基础。这很重要。1.那我们在哪儿？我们要学习的第一个命令是pwd，它代表PrintWorkingDirectory。（你会发现linux中的很多命令都被命名为一个单词的缩写或者描述它们的单词。这使得它更容易记住它们。）命令就是这样。它告诉你当前或现在的工作目录是什么。现在试一试。[root@localhost~]#pwd/root[root@localhost~]#终端上的很多命令都依赖于你在正确的位置。当你四处走动时，很容易忘记你所处的位置。经常使用此命令，以提醒自己目前在哪里。2.我们目前的位置是什么？知道我们在哪里是一回事。接下来我们想知道那里有什么。这个任务的命令是ls。这是列表的简称。我们试一试吧。[root@localhost~]#lsanaconda-ks.cfg[root@localhost~]#虽然pwd只是自己运行而没有参数，但ls更强大一些。我们在这里运行它没有参数，在这种情况下它只会做一个我们当前位置的清单。但是我们可以用ls做更多的事情。以下是其用法概述：ls[选项][位置]在上面的示例中，方括号[]表示这些项是可选的，我们可以使用或不使用它们来运行命令。在下面的终端中，我以几种不同的方式运行ls来演示。[root@localhost~]#lsanaconda-ks.cfg[root@localhost~]#ls-l总用量4-rw-------.1rootroot12415月813:09anaconda-ks.cfg[root@localhost~]#ls/rootanaconda-ks.cfg[root@localhost~]#ls-l/root总用量4-rw-------.1rootroot12415月813:09anaconda-ks.cfg[root@localhost~]#让我们分解一下：第1行-我们以最基本的形式运行ls。它列出了我们当前目录的内容。第3行-我们使用单个命令行选项-l运行ls，这表示我们将列出长列表。长列表有以下内容：第一个字符表示它是普通文件-还是目录d接下来的9个字符是文件或目录的权限（我们将在后面详细了解它们）。下一个字段是块的数量（不要关心这个）。下一个字段是文件或目录的所有者（在本例中为root）。下一个字段是文件或目录所属的组（在本例中为root）。以下是文件大小。接下来是文件修改时间。最后是文件或目录的实际名称。第6行-我们使用命令行参数/root运行ls。当我们这样做时，它告诉我不要列出我们当前的目录，而是列出/root目录内容。第8行-我们使用命令行选项和参数运行ls。因此，它列出了目录/root的长列表。3.路径在之前的命令中，我们开始触及称为路径的东西。我现在想详细介绍它们，因为它们对熟练使用Linux非常重要。每当我们在命令行上引用文件或目录时，我们实际上是指一个路径。即。路径是到达系统上的特定文件或目录的一种方法。3.1.绝对和相对路径我们可以使用两种类型的路径，绝对路径和相对路径。每当我们引用文件或目录时，我们都使用其中一个路径。每当我们引用文件或目录时，我们实际上可以使用任何一种类型的路径（无论哪种方式，系统仍将被定向到同一位置）。首先，我们必须了解linux下的文件系统是一个分层结构。在结构的最顶层是所谓的根目录。它用正斜杠/表示。它有子目录，它们有子目录等。文件可以驻留在任何这些目录中。绝对路径指定与根目录相关的位置（文件或目录）。你可以轻松识别它们，因为它们总是以正斜杠开头/相对路径指定与我们当前在系统中的位置相关的位置（文件或目录）。他们不会以正斜杠开头。这是一个例子来说明：[root@localhost~]#pwd/root[root@localhost~]#ls.anaconda-ks.cfg[root@localhost~]#ls/root/anaconda-ks.cfg[root@localhost~]#第1行-我们运行pwd只是为了验证我们目前的位置。第3行-我们运行ls为它提供相对路径。.是我们当前位置的目录的引用。第5行-我们运行ls为它提供绝对路径。当我们运行它时，无论当前位置如何，此命令都将提供相同的输出。3.2.更多关于路径你会发现Linux中的很多东西都可以通过几种不同的方式实现。路径也不例外。以下是一些可用于帮助构建路径的构建块。~-这是你的主目录的快捷方式。例如，如果你的主目录是/root那么你可以参考目录文件与路径/root/Documents或〜/Documents.-这是对当前目录的引用。例如，在上面的例子中，我们在第3行就使用了它..-这是对父目录的引用。你可以在路径中多次使用它以继续升级层次结构。例如，如果你在路径/root中，你可以运行命令ls..，这将列出根目录的列表。所以现在你可能已经开始看到我们可以用各种不同的方式引用一个位置。有些人可能会问这个问题，我应该使用哪一个？答案是你可以使用任何你喜欢的方法来引用某个位置。无论何时在命令行上引用文件或目录，实际上都是指路径，并且可以使用任何这些元素构造路径。最好的方法是对你来说最方便的方法。这里有些例子：[root@localhost~]#pwd/root[root@localhost~]#ls~anaconda-ks.cfg[root@localhost~]#ls.anaconda-ks.cfg[root@localhost~]#ls/rootanaconda-ks.cfg[root@localhost~]#ls/binbootdevetchomeliblib64mediamntoptprocrootrunsbinsrvsystmpusrvar[root@localhost~]#ls..binbootdevetchomeliblib64mediamntoptprocrootrunsbinsrvsystmpusrvar[root@localhost~]#在命令行上玩这些之后，他们会开始更有意义。确保你了解构建路径的所有这些元素的含义，因为你将在以后的部分中使用所有这些元素。4.让我们四处走动吧为了在系统中移动，我们使用一个名为cd的命令代表更改目录。它的工作原理如下：cd[位置]如果你运行不带任何参数的命令cd，那么它将始终返回你的主目录。命令cd可以在没有位置的情况下运行，但通常会使用单个命令行参数运行，这是我们想要更改的位置。该位置被指定为路径，因此可以指定为绝对路径或相对路径，并使用上述任何路径构建块。这里有些例子。[root@localhost~]#pwd/root[root@localhost~]#cd/[root@localhost/]#pwd/[root@localhost/]#cd~[root@localhost~]#pwd/root[root@localhost~]#cd..[root@localhost/]#pwd/[root@localhost/]#cd/etc/[root@localhostetc]#pwd/etc[root@localhostetc]#cd[root@localhost~]#pwd/root[root@localhost~]#自动补全键入这些路径可能会变得单调乏味。如果你像我一样，你也很容易犯错。命令行有一个很好的小机制来帮助我们这方面。它被称为Tab补全。当你开始键入路径（在命令行的任何位置，你不仅限于某些命令）时，你可以随时点击键盘上的Tab键，这将调用自动完成操作。如果没有任何反应那么这意味着有几种可能性。如果再次按Tab键，它将显示这些可能性。然后，你可以继续键入并再次按Tab键，它将再次尝试为你自动完成。这有点难以在这里展示，所以如果你亲自尝试它可能是最好的。如果你开始输入cd/e+Tab，你会发现它是如何工作的。5.摘要5.1.学到什么pwd打印工作目录。即，我们当前位置ls列出目录内容cd更改位置。即，移动到另一个目录5.2.重要概念相对路径相对于我们当前在文件系统中的位置的文件或目录位置。绝对的道路与文件系统根相关的文件或目录位置。6.活动是的，现在让我们把这些东西付诸实践。请参阅以下内容：让我们从熟悉移动开始吧。使用命令cd和ls来探索系统中的目录以及它们中的内容。确保使用各种相对和绝对路径。一些有趣的地方是：/etc-存储系统的配置文件。/var/log-存储各种系统程序的日志文件。/bin-常用命令的位置（我们将在本教程的其余部分中了解其中一些程序）/usr/bin-系统上保存命令的另一个位置。现在使用4种不同的方法转到你的主目录。在输入路径时确保使用Tab补全。"}, "ms/linuxtutorial/aboutfiles.html": {"url": "ms/linuxtutorial/aboutfiles.html", "title": "关于文件", "keywords": "", "body": "更多关于文件在上一节之后，我确信你很敏锐，并且渴望陷入更多的命令并开始对系统进行一些实际操作。我们很快就会讨论这个问题，但首先我们需要介绍一些理论，这样当我们开始使用系统时，你就可以完全理解为什么它的行为方式以及如何进一步学习你学到的命令。这就是本节和下一节打算做的事情。在那之后，我会开始变得有趣，我保证。1.一切都是文件我们需要首先了解的是linux底层，一切都是文件。文本文件是文件，目录是文件，键盘是文件（系统只从中读取），监视器是文件（系统只写入一个文件）等。首先，这不会过多地影响我们的工作，但是请记住这一点，因为它有助于在管理文件和目录时理解Linux的行为。2.Linux是一个无扩展系统这个问题有时候很难让你理解，但是当你完成这些部分时，它会开始变得更有意义。文件扩展名通常是在文件末尾.后的2到4个字符的集合，表示它是什么类型的文件。以下是常见的扩展：file.exe-可执行文件或程序。file.txt-纯文本文件。file.png，file.gif，file.jpg-一个图片。在其他系统（如Windows）中，扩展很重要，系统使用它来确定它是什么类型的文件。在Linux下，系统实际上忽略了扩展并查看文件内部以确定它是什么类型的文件。所以例如我可以有一个文件1.png这是我的照片。我可以将文件重命名为1.txt或1，Linux仍然将该文件视为图像文件。幸运的是，有一个名为file的命令，我们可以用来识别它。file[路径]现在大家可能想知道为什么我将上面的命令行参数指定为路径而不是文件。在Linux中无论何时我们在命令行上指定文件或目录，它实际上都是一个路径。另外，因为目录（如上所述）实际上只是一种特殊类型的文件，所以说路径是到达系统中特定位置的方法并且该位置是文件会更准确。[root@localhost~]#pwd/root[root@localhost~]#fileanaconda-ks.cfganaconda-ks.cfg:ASCIItext[root@localhost~]#3.Linux是区分大小写的这对于刚接触Linux的人来说非常重要，并且是产生常见问题的根源。在引用文件时，Windows等其他系统不区分大小写。Linux不是这样的。因此，可以有两个或多个具有相同名称但不同大小写字母的文件和目录。Linux将这些视为不同且独立的文件。处理命令行选项时也要注意区分大小写。例如，使用命令ls有两个选项s和S，它们都做不同的事情。一个常见的错误是大小写不注意。4.名称中的空格文件和目录名称中的空格完全有效，但我们需要对它们稍加注意。大家可能还记得，我们在命令行上使用空格分隔参数选项。因此如果路径中存在空格，请使用引号，使用单引号或双引号（稍后我们将看到两者之间存在细微差别，但目前差异不是问题）[root@localhost~]#cd&#39;/proc/irq/24/PCIePME&#39;[root@localhostPCIePME]#pwd/proc/irq/24/PCIePME[root@localhostPCIePME]#cd[root@localhost~]#pwd/root[root@localhost~]#cd/proc/irq/24/PCIe\\PME[root@localhostPCIePME]#pwd/proc/irq/24/PCIePME[root@localhostPCIePME]#cd[root@localhost~]#在前面我们在前面使用Tab按键补全内容。如果在遇到目录名称中的空格之前使用它，则终端将自动转义（第7行\\）名称中的任何空格。引号内的任何内容都被视为单个项目。5.隐藏文件和目录隐藏文件与目录在Windows中直接是不可见。Linux实际上有一个非常简单和优雅的机制来指定隐藏文件或目录。如果文件或目录的名称以.开头，它被认为是隐藏的。出于各种原因，可能隐藏文件和目录。例如，需要把存放小电影的目录隐藏起来。要隐藏文件或目录，你需要创建的文件或目录的名称以.开头，或者将其重命名为.开头。同样，你可以重命名隐藏文件以删除.它会变得不被隐藏。我们在上一节中看到的命令ls默认不会列出隐藏文件和目录。我们可以通过包含命令行选项-a来修改它，r让它显示隐藏的文件和目录。[root@localhost~]#pwd/root[root@localhost~]#lsanaconda-ks.cfg[root@localhost~]#ls-a...anaconda-ks.cfg.bash_history.bash_logout.bash_profile.bashrc.cshrc.tcshrc[root@localhost~]#在上面的例子中，可以看到我们列出当前目录中的所有项目，前两个项目是.与..。还记得我们之前关于路径的部分，它们各代表啥意思？6.摘要6.1.学到什么file获取有关文件或目录的文件类型的信息。ls-a列出目录的内容，包括隐藏文件。6.2.重要概念Linux下一切都是文件，甚至是目录。Linux是一个无扩展的系统，文件可以包含他们喜欢的任何扩展名，也可以不包含任何扩展名Linux区分大小写，小心愚蠢的错别字。7.活动是的，现在让我们把这些东西付诸实践。请参阅以下内容：尝试运行命令file，查看下文件的类型。这样做时，请确保使用各种绝对路径和相对路径。现在执行一个命令，列出根目录的内容，包括隐藏文件和目录。"}, "ms/linuxtutorial/manual.html": {"url": "ms/linuxtutorial/manual.html", "title": "手册页", "keywords": "", "body": "帮助手册页Linux命令行提供了丰富的功能和机会。如果你的记忆与我的记忆相似，那么你会发现很难记住大量的细节。幸运的是，有一个易于使用的资源可以告诉我们在命令行上我们可以做的所有伟大的事情。这就是我们将在本节中学习的内容。我知道你很热衷于急于做事，我们将在下一节开始讨论，我保证，首先我们需要学习如何使用手册页。如果你的英语与我一样烂，还请跳过本节，记住一个网址：Linux命令大全：http://man.linuxde.net/，搜索命令寻求中文帮助。1.那他们到底是什么？手册页是一组页面，用于解释系统上可用的每个命令，包括它们的作用，运行方式的具体信息以及它们接受的命令行参数。其中一些有点难以理解，但它们的结构相当一致，所以一旦掌握了它，它就不会太糟糕。可以使用以下命令调用手册页：man命令例如[root@localhost~]#manlsLS(1)UserCommandsLS(1)NAMEls-listdirectorycontentsSYNOPSISls[OPTION]...[FILE]...DESCRIPTIONListinformationabouttheFILEs(thecurrentdirectorybydefault).Sortentriesalphabeticallyifnoneof-cftuvSUXnor--sortisspecified.Mandatoryargumentstolongoptionsaremandatoryforshortoptionstoo.-a,--alldonotignoreentriesstartingwith.-A,--almost-alldonotlistimplied.and..--authorwith-l,printtheauthorofeachfile-b,--escapeprintC-styleescapesfornongraphiccharacters--block-size=SIZEscalesizesbySIZEbeforeprintingthem;e.g.,&#39;--block-size=M&#39;printssizesinunitsof1,048,576bytes;seeSIZEformatbelow-B,--ignore-backupsdonotlistimpliedentriesendingwith~-cwith-lt:sortby,andshow,ctime(timeoflastmodificationoffilestatusinformation);with-l:showctimeandsortbyname;otherwise:sortbyctime,newestfirst-ClistentriesbycolumnsManualpagels(1)line1(presshforhelporqtoquit)让我们分解一下：第5行告诉我们实际命令后跟一个简单的一行描述它的功能。第8行是所谓的概要。这实际上只是对命令应该如何运行的快速概述。方括号[]表示某些内容是可选的。（此行上的选项指的是描述下面列出的命令行选项）第11行向我们提供了该命令的更详细描述。第14行以下描述下面将始终是该命令可用的所有命令行选项的列表。要退出手册页，请按q退出。2.搜索可以在手册页面上进行关键字搜索。如果你不太确定你可能想要使用什么命令但是你知道你想要实现什么，这可能会有所帮助。为了使这种方法有效，你可能需要一些努力。在许多手册页中发现特定单词的情况并不少见。man-k&lt;搜索词&gt;如果你想在手册页中进行搜索，也可以。当你在特定的手册页中时，输入正斜杠/，然后是你要搜索的术语，按enter如果该术语出现多次，你可以循环浏览它们按n进行下一个。3.有关命令运行的更多信息很多精通Linux的人都知道我们应该使用哪些命令行选项来修改命令行为以满足我们的需求。其中很多命令选项都有长和短版本。例如。在上面你会注意到要列出所有目录条目（包括隐藏文件），我们可以使用选项-a或--all。长选项实际上只是一种人类可读的形式。你也可以使用它们，它们都做同样的事情。使用长选项的一个优点是，你可以更容易地记住你的命令正在做什么。使用短选项的一个优点是，你可以更轻松地将多个链接在一起。[root@localhost~]#pwd/root[root@localhost~]#ls-a...anaconda-ks.cfg.bash_history.bash_logout.bash_profile.bashrc.cshrc.tcshrc[root@localhost~]#ls--all...anaconda-ks.cfg.bash_history.bash_logout.bash_profile.bashrc.cshrc.tcshrc[root@localhost~]#ls-al总用量28dr-xr-x---.2rootroot1355月813:13.dr-xr-xr-x.17rootroot2245月813:09..-rw-------.1rootroot12415月813:09anaconda-ks.cfg-rw-------.1rootroot95月813:13.bash_history-rw-r--r--.1rootroot1812月292013.bash_logout-rw-r--r--.1rootroot17612月292013.bash_profile-rw-r--r--.1rootroot17612月292013.bashrc-rw-r--r--.1rootroot10012月292013.cshrc-rw-r--r--.1rootroot12912月292013.tcshrc[root@localhost~]#如你所见，长命令行选项以两个-开头，而短选项以单个-开头。当我们使用单个短划线时，我们可以通过在短划线后将表示这些选项的所有字母放在一起来调用多个选项。（有一些实例，特定选项需要一个参数来配合它，这些选项通常必须与它们相应的参数分开放置。现在不要过于担心这些特殊情况。当我们遇到它们时，再聊。）4.摘要4.1.学到什么man&lt;command&gt;查找特定命令的手册页。man-k&lt;搜索词&gt;对包含给定搜索词的所有手册页进行关键字搜索。/&lt;术语&gt;在手册页中，搜索“术语”n在手动页面中执行搜索后，选择下一个找到的项目。4.2.重要概念让手册页做你的朋友。而不是试图记住所有内容，而是记住你可以轻松地在手册页中查找内容。5.活动是的，现在让我们把这些东西付诸实践。请参阅以下内容：浏览ls的手册页。玩一些你在那里找到的命令行选项。确保你玩一些组合。同时确保你使用绝对路径和相对路径的ls。现在尝试通过手册页进行一些搜索。"}, "ms/linuxtutorial/filemanipulation.html": {"url": "ms/linuxtutorial/filemanipulation.html", "title": "文件操作", "keywords": "", "body": "文件操作我们已经有了一些基础知识。现在我们可以开始玩了。首先，我们将学习制作一些文件和目录并移动它们。未来部分将讨论将内容放入其中以及更有趣的操作。1.创建目录Linux以分层方式组织它的文件系统。随着时间的推移，你将建立相当数量的数据文件（存储容量总是在增加）。我们必须创建一个目录结构，以帮助我们以可管理的方式组织数据。我已经看到太多人只是将所有文件直接转储到他们的主目录的基础上，这将浪费了大量的时间来尝试在100（甚至1000）个文件中找到想要的文件。养成将你的文件组织成一个优雅的文件结构的习惯，你将在未来几年感谢自己。创建目录非常简单。命令是mkdir，它是MakeDirectory的缩写。mkdir[options]&lt;目录&gt;在它最基本的形式中，我们可以运行mkdir只提供一个目录，它将为我们创建它。[root@localhost~]#pwd/root[root@localhost~]#lsanaconda-ks.cfg[root@localhost~]#mkdirliushilive[root@localhost~]#lsanaconda-ks.cfgliushilive[root@localhost~]#让我们分解一下：第1行确定我们当前所在路径。（在上面的示例中，我在我的主目录中）第3行快速列出内容，以便我们知道目录中已有的内容。第5行运行命令mkdir并创建一个目录liushilive第7行快速列出内容，以便我们知道目录中已经创建了新的内容。请记住，当我们在上面的命令中提供目录时，我们实际上提供了一个路径。我们指定的路径是相对的还是绝对的？以下是我们提供要如何创建目录的更多示例mkdir/root/liushi_1mkdir./liushi_2mkdir../root/liushi_3mkdir~/liushi_4如果不认识其中符号，请查看基本导航mkdir有一些有用的选项。你能记得我们去哪里找出特定命令支持的命令行选项吗？第一个是-p，它告诉mkdir根据需要创建父目录（演示下面实际意味着什么）。[root@localhost~]#mkdir-pliushilive/foo/bar[root@localhost~]#cdliushilive/foo/bar/[root@localhostbar]#pwd/root/liushilive/foo/bar[root@localhostbar]#第二个是-v，这使得mkdir告诉我们它在做什么。[root@localhost~]#cd~[root@localhost~]#mkdir-pvliushilive_1/foo/barmkdir:已创建目录&quot;liushilive_1&quot;mkdir:已创建目录&quot;liushilive_1/foo&quot;mkdir:已创建目录&quot;liushilive_1/foo/bar&quot;[root@localhost~]#2.删除目录创建目录非常简单。删除或删除目录也很容易。然而，需要注意的一点是，Linux上的命令行没有撤消（LinuxGUI桌面环境通常会提供撤消功能，但命令行却没有）。小心你做的事情。删除目录的命令是rmdir，removedirectory的缩写。rmdir[options]&lt;目录&gt;有两点需要注意。首先，rmdir支持类似于mkdir的-v和-p选项。其次，一个目录必须是空的才能被删除（稍后我们会看到一种方法来解决这个问题）。[root@localhost~]#rmdirliushilive/foo/bar[root@localhost~]#lsliushilive/foo/[root@localhost~]#3.创建空白文件许多涉及在文件中操作数据的命令都有一个很好的特性，即如果我们引用文件而该文件不存在，它们将自动创建该文件。事实上，我们可以利用这个特性来创建空白文件。touch[options]&lt;文件名&gt;[root@localhost~]#cdliushilive[root@localhostliushilive]#pwd/root/liushilive[root@localhostliushilive]#lsfoo[root@localhostliushilive]#touchexample1[root@localhostliushilive]#lsexample1foo[root@localhostliushilive]#我知道有些学生尝试过使用这个命令，使他们的作业文件看起来在截止日期之后没有被修改（有一些方法可以检测到这一点，所以它永远不会起作用，但要有创造性）。我们在这里利用的是，如果我们触摸了一个文件，但它不存在，这个命令会帮我们一个忙，并自动为我们创建它。touch实际上是一个我们可以用来修改文件访问和修改时间的命令（通常不需要，但有时当你测试一个依赖于文件访问或修改时间的系统时，它可能是有用的）。我们在这里所利用的优势是，如果我们touch一个文件，它不存在，命令将帮助我们，并自动为我们创建它。在Linux中，许多事情不是直接完成的，而是通过了解某些命令的行为和系统的某些方面，并以创造性的方式使用它们来达到预期的结果。还记得我们在介绍中提到的命令行为你提供了一系列构建块。你可以自由地以任何你喜欢的方式使用这些构建块，但是只有你了解它们是如何以及为什么这样做，你才能真正有效地做到这一点。目前文件是空白的，这有点无聊，但在接下来的章节中，我们将介绍如何将数据放入文件并从中提取数据。4.复制文件或目录我们需要复制文件或目录的原因有很多。通常在更改某些内容之前，我们可能希望创建一个副本，以便在出现错误时可以轻松地恢复到原来的状态。我们使用的命令是cp，代表copy。cp[options]&lt;源&gt;&lt;目标&gt;有相当多的选项可用于cp。下面我将进一步介绍其中的一个，但是有必要查看cp的man页面，看看还有什么可用的。[root@localhostliushilive]#lsexample1foo[root@localhostliushilive]#cpexample1example2[root@localhostliushilive]#lsexample1example2foo[root@localhostliushilive]#请注意，源和目标都是路径。这意味着我们可以使用绝对路径和相对路径来引用它们。以下是一些例子：cp/root/liushilive/example2example3cpexample2../../tmpcpexample2../../tmp/example4cp/root/liushilive/example2/root/liushilive/example5使用cp时，目的地可以是文件或目录的路径。如果是到一个文件（例如上面的示例1、3和4)，那么它将创建源的一个副本，但是将副本命名为目标文件中指定的文件名。如果我们提供一个目录作为目标，那么它将把文件复制到该目录中，并且复制文件将具有与源文件相同的名称。在它的默认行为cp将只复制一个文件（有一种一次复制多个文件的方法，但是我们将在后面讨论这个问题：通配符）。使用-r选项（表示递归），我们可以复制目录。递归意味着我们要查看一个目录以及其中的所有文件和目录，对于子目录，进入它们并执行相同的操作，然后继续这样做。[root@localhostliushilive]#pwd/root/liushilive[root@localhostliushilive]#lsexample1example2example3example5foo[root@localhostliushilive]#cpfoofoo2cp:略过目录&quot;foo&quot;[root@localhostliushilive]#lsexample1example2example3example5foo[root@localhostliushilive]#cp-rfoofoo2[root@localhostliushilive]#lsexample1example2example3example5foofoo2[root@localhostliushilive]#5.移动文件或目录要移动一个文件，我们使用命令mv，它是move的缩写。它的工作方式与cp相似。一个小小的优点是，我们可以移动目录而不必提供-r选项。mv[options]&lt;源&gt;&lt;目标&gt;[root@localhostliushilive]#pwd/root/liushilive[root@localhostliushilive]#lsexample1example2example3example5foofoo2[root@localhostliushilive]#mkdirbackups[root@localhostliushilive]#mvfoo2backups/foo3[root@localhostliushilive]#lsbackupsexample1example2example3example5foo[root@localhostliushilive]#让我们来分析一下：第5行我们创建了一个名为backups的新目录第6行我们将目录foo2移动到目录backups中，并将其重命名为foo3请再次注意，源和目标都是路径，可以为绝对路径或相对路径。6.重命名文件和目录现在就像上面的命令touch一样，我们可以创造性地使用命令mv的基本行为来实现一个稍微不同的结果。通常，mv将用于将文件或目录移动到新目录中。正如我们在上面的第6行中看到的，我们可以为文件或目录提供一个新的名称，作为移动的一部分，它还将重命名它。现在，如果我们将目的地指定为与源目录相同的目录，但使用不同的名称，那么我们就有效地使用了mv来重命名文件或目录。[root@localhostliushilive]#lsbackupsexample1example2example3example5foo[root@localhostliushilive]#mvfoofoo3[root@localhostliushilive]#lsbackupsexample1example2example3example5foo3[root@localhostliushilive]#让我们来分析一下：第3行我们将foo重命名为foo37.删除文件（和非空目录）与rmdir一样，删除文件是一个不能撤消的操作，所以要小心。删除或删除文件的命令是rm，它代表remove。rm[options]&lt;file&gt;[root@localhostliushilive]#clear[root@localhostliushilive]#lsbackupsexample1example2example3example5foo3[root@localhostliushilive]#rmexample1rm：是否删除普通空文件&quot;example1&quot;？y[root@localhostliushilive]#lsbackupsexample2example3example5foo3[root@localhostliushilive]#8.删除非空目录与本节介绍的其他几个命令一样，rm有几个选项可以改变它的行为。我将让你自己来查看man页面，看看它们是什么，但是我将介绍一个特别有用的选项，它是-r，类似于cp，它代表递归。当rm使用-r选项运行时，它允许我们删除目录以及其中包含的所有文件和目录。[root@localhostliushilive]#lsbackupsexample2example3example5foo3[root@localhostliushilive]#rmdirbackups/rmdir:删除&quot;backups/&quot;失败:目录非空[root@localhostliushilive]#rmbackups/rm:无法删除&quot;backups/&quot;:是一个目录[root@localhostliushilive]#rm-rbackups/rm：是否进入目录&quot;backups/&quot;?yrm：是否删除目录&quot;backups/foo3&quot;？yrm：是否删除目录&quot;backups/&quot;？y[root@localhostliushilive]#lsexample2example3example5foo3[root@localhostliushilive]#在删除每个文件和目录之前提示你，并为你提供取消命令的选项。如果不想交互式提示，可加入-f，将不会有任何提示，直接删除！！！9.最后一点我知道我已经强调了这一点，但是现在希望你能够理解，每当我们在命令行中引用一个文件或目录时，它实际上是一个路径。因此，它可以指定为绝对路径或相对路径。这是几乎总是这样的情况，所以记住这一点很重要。在以后的章节中，我不会一直提醒你这一点，给出的例子通常也不会说明这一点。记住在命令中实验绝对路径和相对路径，因为它们有时会在输出中提供细微但有用的差异。（命令的输出可能略有不同，但是命令的操作总是相同的。)10.摘要10.1.学到什么mkdir创建一个目录rmdir删除一个目录touch创建一个空白文件cp复制文件或目录mv移动文件或目录（也可用于重命名）rm删除文件10.2.重要概念没有挽回的余地Linux命令行没有撤销功能！！！命令行选项大多数命令都有许多有用的命令行选项。请确保浏览手册页以获取新命令，以便熟悉它们的功能和可用内容11.活动是的，现在让我们把这些东西付诸实践。请参阅以下内容：首先在你的主目录中创建一个目录，在其中进行试验在该目录中，创建一系列文件和目录（以及这些目录中的文件和目录）现在重命名一些文件和目录删除包含其他文件和目录的目录之一回到你的主目录，从那里将一个文件从一个子目录复制到你创建的初始目录中现在将该文件移回另一个目录重命名一些文件接下来，移动一个文件并在此过程中重命名它最后，查看一下你的主目录中的现有目录"}, "md/项目/高阶项目环境部署.html": {"url": "md/项目/高阶项目环境部署.html", "title": "高阶项目环境部署", "keywords": "", "body": "高阶项目环境部署下载高阶项目环境相关文件：https://pan.baidu.com/s/1soMgG5zOrcEu66uykj3zHg提取码：kvup1.部署VMwareworkstation下一步、下一步、直接安装，记得填写注册码即可。2.导入项目启动VMwareWorkstationPro菜单项：文件-打开选择高阶项目ovf目录下高阶项目v2.ovf文件导入虚拟机：路径自己定，大约需要硬盘空间：3G等待导入完毕导入完毕后即可看到高阶项目虚拟机，点击开启此虚拟机启动虚拟机如有提示，请认真阅读提示，选择是、确定、重试等肯定选项虚拟机启动完毕后，首先看到的是登录界面，需要鼠标点进去，然后输入账号密码进行登录，Linux中输入密码时无任何回显，输入完毕直接回车，不要用小键盘输入用户名：root密码：123456登录完毕后，通过ipaddr命令查看IP地址，IP地址会有多个，选择其中任意一个都可以访问，但是建议使用局域网网段的IP3.访问项目通过浏览器访问虚拟机IP地址，即可打开项目4.配置项目第一次进入大商创首页然之，需要根据首页下面的图片初始化项目5.删除如果虚拟机玩坏了，关闭虚拟机，删除，重新导入即可"}, "md/tools/bash-completion-zi-dong-bu-quan-gong-neng-zeng-qiang.html": {"url": "md/tools/bash-completion-zi-dong-bu-quan-gong-neng-zeng-qiang.html", "title": "自动补全功能增强", "keywords": "", "body": "bash-completion自动补全功能增强在RHEL7/CentOS7以前的版本中，bash自动补全功能仅限于命令和文件名，然而网络设备往往可以自动补全命令的参数，常常让搞网络出身的工程师唏嘘不已。在新出的RHEL7/CentOS7中的Bash已经可以自动补全命令参数了，需要注意的是RHEL7/CentOS7的默认安装类型是最小安装，它是没有这个功能的。要启用这个功能，你需要安装一个bash-completion包，然后退出bash，重新登录即可（未重启bash的情况下继续使用可能出现补全功能异常，出现一堆代码）。bash-2.05及以后的版本提供了自动补齐的编程接口，通过安装bash-completion来使用TAB键自动补齐几乎任何内容，包括参数、文件、目录甚至包名称等等。在最近的Linux各个发行版中基本都带有bash-completion包，如果没有的话，可以从网上下载源码包安装。yuminstallbash-completion"}, "md/tools/sudo.html": {"url": "md/tools/sudo.html", "title": "配置 Sudo", "keywords": "", "body": "CentOS配置Sudo使用sudo用户访问服务器并在根级别执行命令是Linux和Unix系统管理员中非常常见的做法。使用asudo用户通常通过禁用对其服务器的直接根访问来防止未经授权的访问。在本教程中，我们将介绍禁用直接root访问，创建sudo用户以及在CentOS上设置sudo组的基本步骤。1.步骤1：安装sudoyuminstallsudo-y2.步骤2：添加sudo用户一个sudo用户是Linux机器上的普通用户帐户。addusermynewusername3.步骤3：将新用户添加到wheel组（可选的）wheel组是一个用户组，只有属于wheel组的用户才可以用su登录为root，添加你的sudo用户到wheel组是完全可选的，但建议。在CentOS中，属于的wheel组的用户可以执行su直接上升到root。同时，sudo用户将会使用sudosu。基本上除了语法之外没有什么真正的区别成为root，而属于这两个组的用户可以使用sudo命令。usermod-aGwheelmynewusername4.步骤4：确保你的sudoers文件设置正确确保这一点很重要sudoers文件位于/etc/sudoers正确设置为了允许sudousers有效使用sudo命令。为了达到这个目标，我们将会看到内容/etc/sudoers并在适用的地方进行编辑。vim/etc/sudoers开始审查和编辑下面这行：#Allowmembersofgroupsudotoexecuteanycommand这一节/etc/sudoers经常看起来像这样：#Allowmembersofgroupsudotoexecuteanycommand%sudoALL=(ALL:ALL)ALL在某些系统中，你可能找不到%wheel代替%sudo;在这种情况下，这将是你将开始修改的行。如果行开始%sudo在Debian或%wheel在CentOS中没有注释掉（前缀为＃），这意味着sudo已经被设置并启用了。然后，你可以转到下一步。5.步骤5：允许不属于的用户wheel也不是sudo组执行sudo命令可以允许不在用户组中的用户执行sudo只需将它们添加到命令中即可/etc/sudoers如下：anotherusernameALL=(ALL)ALL6.步骤6：重新启动SSHD服务器为了应用你所做的更改/etc/sudoers，你需要重新启动SSHD服务器，如下所示：CentOS6/etc/init.d/sshdrestartCentOS7systemctlrestartsshd.service7.步骤7：测试重新启动SSH服务器后，请注销，然后重新登录sudouser，然后尝试执行一些测试命令，如下所示：sudouptimesudowhoami任何以下命令将允许sudouser成为root。sudosu-sudo-isudo-S笔记：该whoami命令将返回root当加上sudo。执行时将提示你输入用户密码sudo命令，除非你明确指示系统不提示sudousers为他们的密码。请注意，这不是推荐的做法。可选：允许sudo而不输入用户的密码如前所述，这不是推荐的做法，仅在演示目的中包含在本教程中。为了让你的sudouser执行sudo命令，而不被提示输入密码，后缀为访问行/etc/sudoers同NOPASSWD:ALL如下：%sudoALL=(ALL:ALL)ALLNOPASSWD:ALL注意：你需要重新启动SSHD服务器才能应用更改。8.步骤8：禁用直接root访问现在你已经确认可以使用你的sudouser没有问题，现在是第八步的禁用直接根访问的时间。首先打开/etc/ssh/sshd_config使用你喜欢的文本编辑器，并找到包含以下字符串的行。它可能有一个前缀#字符。PermitRootLogin无论前缀或该选项的值/etc/ssh/sshd_config你需要将该行更改为以下内容：PermitRootLoginno最后，重新启动你的SSHD服务器。注意：不要忘了通过尝试将SSH更改为服务器来测试你的更改root。如果你无法这样做，这意味着你已成功完成所有必要的步骤。我们的教程结束了。"}, "md/tools/添加Swap.html": {"url": "md/tools/添加Swap.html", "title": "添加 Swap", "keywords": "", "body": "如何在CentOS7上添加Swap1.介绍提高服务器响应速度和防止应用程序内存不足错误的最简单方法之一是添加一些交换空间。Swap是硬盘上的一个区域，它被指定为操作系统可以临时存储数据的地方，这些数据不能再保存在RAM中。写入磁盘的信息将比保存在RAM中的信息慢，但操作系统更愿意将应用程序数据保存在内存中，并使用Swap交换旧数据。总的来说，当系统的RAM耗尽时，将Swap作为数据存储空间是一个很好的选择。在本指南中，我们将介绍如何在CentOS7服务器上创建和启用交换文件。2.检查系统的交换信息在我们开始之前，我们将看看我们的操作系统，看看我们是否已经有一些可用的交换空间。我们可以有多个交换文件或交换分区，但通常一个就足够了。我们可以通过键入以下命令来查看系统是否有任何配置交换：sudoswapon-s如果返回空，表示目前没有启用任何Swap。另一个检查Swap的方法是使用free命令，它显示了系统内存使用的情况：free-mtotalusedfreesharedbuff/cacheavailableMem:472111364324308Swap:0003.检查硬盘驱动器分区上的可用空间为swap分配空间的典型方式是使用专门用于该任务的单独分区。但是，改变分区方案并不总是可能的。我们可以轻松地创建驻留在现有分区上的交换文件。在我们这样做之前，我们应该知道我们当前的磁盘使用情况。我们可以通过输入以下内容来获得这些信息：df-h文件系统容量已用可用已用%挂载点/dev/mapper/cl-root17G5.0G13G30%/devtmpfs226M0226M0%/devtmpfs237M0237M0%/dev/shmtmpfs237M4.6M232M2%/runtmpfs237M0237M0%/sys/fs/cgroup/dev/sda11014M139M876M14%/boottmpfs48M048M0%/run/user/0正如第一行中看到的，我们的硬盘分区有13G可用，所以我们有大量空间可用。这是在一个新的，中等规模的VPS实例上，所以你的实际使用可能会有很大的不同。尽管对于交换空间的适当大小有很多意见，但这取决于你的个人偏好和应用程序要求。一般来说，等于或者是系统内存量的两倍是一个很好的起点。由于我的老古董机器只具有512M的RAM，并且加倍会占用我不太愿意被占用的大量磁盘空间，所以我将创建1GB的交换空间以匹配我系统的RAM。4.创建一个交换文件现在我们知道了可用的存储空间，我们可以在我们的文件系统中创建一个交换文件。我们将swapfile在我们的root（/）目录中创建一个文件，尽管如果你愿意，可以将文件命名为其他文件。该文件必须分配我们想要的交换文件的空间量。传统上，我们将通过使用该dd命令来创建具有预分配空间的文件。这个多功能的磁盘工具从一个位置写入另一个位置。我们可以使用它在Linux系统中的特殊设备上将文件零写入文件，该系统/dev/zero只需要根据请求分配尽可能多的零。我们使用bs块大小和count块数的组合来指定文件大小。我们分配给每个参数几乎完全是任意的。重要的是它们相乘的结果。例如，在我们的例子中，我们正在创建一个1G的文件。我们可以通过指定1M的块大小和1024：也可以指定1G的块大小和1，但是如果在系统本身内存小于1G的情况下会由于输入缓冲导致内存耗尽而失败块大小越大速度越快ddif=/dev/zeroof=/swapfilebs=1Mcount=1024记录了1024+0的读入记录了1024+0的写出1073741824字节(1.1GB)已复制，4.76434秒，225MB/秒在按ENTER之前检查你的命令，因为如果你指出of（代表输出文件）到错误的位置，这可能会破坏数据。我们可以看到1千兆字节已经分配：ls-lh/swapfile-rw-r--r--.1rootroot1.0G2月2216:36/swapfile5.启用交换文件目前，我们的文件已创建，但我们的系统不知道这应该用于交换。我们需要告诉我们的系统将该文件格式化为交换，然后启用它。在我们这样做之前，我们需要调整我们文件的权限，以便除root之外的任何人都无法读取它。允许其他用户读取或写入此文件将是一个巨大的安全风险。我们可以通过输入以下内容来锁定权限：chmod600/swapfile通过输入以下内容验证文件是否具有正确的权限：ls-lh/swapfile-rw-------.1rootroot1.0G2月2216:36/swapfile如你所见，只有root用户的列才能启用读取和写入标志。现在我们的文件更安全了，我们可以通过键入以下命令来告诉我们的系统设置交换空间：mkswap/swapfile正在设置交换空间版本1，大小=1048572KiB无标签，UUID=d945f99d-f025-4b62-adde-1ea635329bfd我们的文件现在已准备好用作交换空间。我们可以输入以下命令来启用它swapon/swapfile我们可以通过检查我们的系统现在是否报告交换空间来验证过程是否成功：swapon-s文件名类型大小已用权限/swapfilefile10485720-1我们在这里有一个新的交换文件。我们可以free再次使用该实用程序来证实我们的发现：free-mtotalusedfreesharedbuff/cacheavailableMem:47210654360314Swap:102301023我们的交换已成功建立，我们的操作系统将根据需要开始使用它。6.永久使交换文件我们启用了我们的交换文件，但是当我们重新启动时，服务器不会自动启用该文件。我们可以通过修改fstab文件来改变它。vi/etc/fstab在文件底部，你需要添加一行代码，告诉操作系统自动使用你创建的文件：/swapfilenoneswapsw00完成后保存并关闭文件。7.调整你的交换设置在处理交换时，可以配置几个选项，这些选项会影响系统的性能。该swappiness参数配置系统将数据从RAM交换到交换空间的频率。这是介于0和100之间的值，表示百分比。如果值接近零，内核将不会将数据交换到磁盘，除非绝对必要。请记住，与交换文件的交互是“昂贵的”，因为它们比与RAM的交互花费更多时间，并且可能导致性能的显着降低。告诉系统不要太依赖交换通常会使系统更快。接近100的值将尝试将更多的数据放入交换中以努力保持更多的RAM空间。根据你的应用程序的内存配置文件或你使用的服务器，在某些情况下可能会更好。通过输入以下内容我们可以看到当前的swappiness值：cat/proc/sys/vm/swappiness60对于桌面，60的swappiness设置并不是一个坏的值。对于VPS系统，我们可能希望将其移近0。我们可以使用该sysctl命令将swappiness设置为不同的值。例如，要将swappiness设置为10，我们可以键入：sysctlvm.swappiness=10vm.swappiness=10该设置将持续到下一次重新启动。我们可以在重启时自动设置该值，方法是将该行添加到我们的/etc/sysctl.conf文件中：vi/etc/sysctl.conf在底部，你可以添加：vm.swappiness=10完成后保存并关闭文件。你可能想要修改的另一个相关值是vfs_cache_pressure。此设置配置系统将选择多少数据缓存inode和dentry信息。基本上，这是访问有关文件系统的数据。这通常是非常昂贵的查找和频繁请求，所以对于你的系统来说缓存是一件很棒的事情。你可以通过proc再次查询文件系统来查看当前值：cat/proc/sys/vm/vfs_cache_pressure100正如目前配置的那样，系统太快地从缓存中删除索引节点信息。通过输入以下内容，可以将其设置为更保守的设置，如50：sysctlvm.vfs_cache_pressure=50vm.vfs_cache_pressure=50这只对目前的session有效。我们可以通过将它添加到配置文件中来改变它，就像使用swappiness设置一样：vi/etc/sysctl.conf在底部，添加指定新值的行：vm.vfs_cache_pressure=50完成后保存并关闭文件。8.结论按照本指南中的步骤，将为你提供一些Swap，以便使用RAM。交换空间在避免一些常见问题方面非常有用。如果遇到OOM（内存不足）错误，或者如果发现系统无法使用所需的应用程序，则最佳解决方案是优化应用程序配置或升级服务器。然而，配置交换空间可以给你更多的灵活性。"}, "md/tools/LEMP.html": {"url": "md/tools/LEMP.html", "title": "LEMP 环境", "keywords": "", "body": "如何在CentOS7上安装Linux，Nginx，MySQL，PHP（LEMP）环境1.第一步-安装Nginx要添加CentOS7EPEL仓库，请打开终端并使用以下命令：echonameserver8.8.8.8&gt;&gt;/etc/resolv.confcurl-o/etc/yum.repos.d/CentOS-Base-ali.repohttp://mirrors.aliyun.com/repo/Centos-7.repoyummakecacheyuminstall-yepel-release现在Nginx存储库已经安装在你的服务器上，使用以下yum命令安装Nginx：yuminstall-ynginx之后，你的Web服务器已安装。一旦安装，你就可以在你的VPS上启动Nginx：systemctlstartnginx添加防火墙规则firewall-cmd--add-port=80/tcp--permanentfirewall-cmd--reload你可以立即进行现场检查，通过在你的Web浏览器中访问服务器的公共IP地址来验证所有事情是否按计划进行（请参阅下一个标题下的注释，以了解你的公共IP地址是什么，如果你没有此信息已经）：http://server_domain_name_or_IP/你会看到默认的CentOS7Nginx网页，这是为了提供信息和测试目的。如果你看到这个页面，那么你的Web服务器现在已经正确安装了。在继续之前，你需要做的是启用Nginx启动。使用以下命令来执行此操作：systemctlenablenginx2.第二步-安装MySQL（MariaDB）现在我们已经启动了Web服务器，现在是时候安装一个MySQL插件替代品MariaDB了。MariaDB是MySQL关系数据库管理系统的一个社区开发的分支。基本上，它将组织和提供访问我们的网站可以存储信息的数据库。再次，我们可以使用yum获取和安装我们的软件。这一次，我们还将安装一些其他“帮手”软件包，这些软件包可以帮助我们获得组件之间的通信。yuminstall-ymariadb-servermariadb安装完成后，我们需要使用以下命令启动MariaDB：systemctlstartmariadb现在我们的MySQL数据库正在运行，我们希望运行一个简单的安全脚本，它将删除一些危险的默认值，并锁定对数据库系统的访问。运行以下命令启动交互式脚本：mysql_secure_installation提示符会询问你当前的root密码。由于你刚刚安装了MySQL，你很可能不会拥有一个，因此请按Enter键将其留空。然后提示符会询问你是否要设置root密码。继续前进Y，并按照说明：mysql_secure_installationprompts:Entercurrentpasswordforroot(enterfornone):OK,successfullyusedpassword,movingon...SettingtherootpasswordensuresthatnobodycanlogintotheMariaDBrootuserwithouttheproperauthorisation.Newpassword:passwordRe-enternewpassword:passwordPasswordupdatedsuccessfully!Reloadingprivilegetables.....Success!对于其余的问题，你应该简单地通过每个提示点击“ENTER”键来接受默认值。这将删除一些示例用户和数据库，禁用远程root登录，并加载这些新规则，以便MySQL立即尊重我们所做的更改。你要做的最后一件事是启用MariaDB启动。使用以下命令来执行此操作：systemctlenablemariadb在这一点上，你的数据库系统现在已经建立，我们可以继续前进。3.第三步-安装PHPPHP是我们设置的组件，它将处理代码以显示动态内容。它可以运行脚本，连接到我们的MySQL数据库来获取信息，并将处理的内容交给我们的Web服务器来显示。我们可以再次利用该yum系统来安装我们的组件。我们将包括php-mysql和php-fpm包：rpm-Uvhhttps://mirror.webtatic.com/yum/el7/epel-release.rpmrpm-Uvhhttps://mirror.webtatic.com/yum/el7/webtatic-release.rpmyuminstall-yyuminstallphp56wphp56w-mysqlphp56w-gdphp56w-imapphp56w-ldapphp56w-odbcphp56w-pearphp56w-xmlphp56w-xmlrpcphp56w-mbstringphp56w-mcryptphp56w-bcmathphp56w-mhashphp56w-fpmphp56w-opcache3.1.配置PHP处理器我们现在已经安装了我们的PHP组件，但是我们需要稍作修改，以使我们的安装更加安全。sed-i&#39;s/^;date.timezone=/date.timezone=PRC/&#39;/etc/php.inised-i&#39;s/^;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/&#39;/etc/php.ini接下来，打开php-fpm配置文件www.conf：sed-i&#39;s/127.0.0.1:9000/\\/var\\/run\\/php-fpm\\/php-fpm.sock/&#39;/etc/php-fpm.d/www.confsed-i&#39;s/;listen.owner=nobody/listen.owner=nginx/&#39;/etc/php-fpm.d/www.confsed-i&#39;s/;listen.group=nobody/listen.group=nginx/&#39;/etc/php-fpm.d/www.confsed-i&#39;s/;user=apache/user=nginx/&#39;/etc/php-fpm.d/www.confsed-i&#39;s/group=apache/group=nginx/&#39;/etc/php-fpm.d/www.conf现在，我们只需要键入以下命令启动我们的PHP处理器：systemctlstartphp-fpmchmod666/var/run/php-fpm/php-fpm.sockchownnginx:nginx/var/run/php-fpm/php-fpm.socksystemctlrestartphp-fpm这将实施我们所做的改变。接下来，启用php-fpm在启动时启动：systemctlenablephp-fpm4.第四步-配置Nginx来处理PHP页面现在，我们已经安装了所有必需的组件。我们仍然需要做的唯一配置更改是告诉Nginx使用我们的PHP处理器来处理动态内容。我们在服务器块级别上执行此操作（服务器块类似于Apache的虚拟主机）。输入以下命令：(cat&lt;&lt;EOFindexindex.phpindex.htmlindex.htm;server_nameyourdomainnameorIP;#passthePHPscriptstoFastCGIserverlisteningonthephp-fpmsocketlocation~\\.php${try_files\\$uri=404;fastcgi_passunix:/run/php-fpm/php-fpm.sock;fastcgi_indexindex.php;fastcgi_paramSCRIPT_FILENAME\\$document_root\\$fastcgi_script_name;includefastcgi_params;}EOF)&gt;/etc/nginx/default.d/default.conf完成上述更改后，可以保存并关闭文件。重新启动Nginx进行必要的更改：systemctlrestartnginx5.第五步-在Web服务器上测试PHP处理为了测试我们的系统是否正确配置了PHP，我们可以创建一个非常基本的PHP脚本。我们将调用这个脚本info.php。为了让Apache找到并正确提供，必须将其保存到一个非常特定的目录中，这个目录称为“Web根目录”。在CentOS7中，这个目录位于/usr/share/nginx/html/。我们可以通过键入以下内容在该位置创建文件：vi/usr/share/nginx/html/info.php这将打开一个空白文件。我们希望在文件中放入以下有效的PHP代码文本：(cat&lt;&lt;EOF&lt;?phpphpinfo();?&gt;EOF)&gt;/usr/share/nginx/html/info.php完成后，保存并关闭文件。现在我们可以测试我们的Web服务器是否可以正确显示由PHP脚本生成的内容。要尝试这一点，我们只需要在我们的网页浏览器中访问这个页面。你将需要你的服务器的公共IP地址。你想要访问的地址是：http://your_server_IP_address/info.php如果这是成功的，那么你的PHP工作正常。在测试之后，你可能希望删除此文件，因为它实际上可能会将你的服务器信息提供给未经授权的用户。要做到这一点，你可以输入这个：rm/usr/share/nginx/html/info.php如果你以后需要再次访问该信息，则可以随时重新创建此页面。"}, "md/tools/install-oracle-11g-express-xe-on-centos-7.html": {"url": "md/tools/install-oracle-11g-express-xe-on-centos-7.html", "title": "Oracle 11g Express (XE)", "keywords": "", "body": "Oracle部署OracleXE下载OracleXE官方文档1.上传安装包oracle-xe-11.2.0-1.0.x86_64.rpm2.安装必需的安装包yuminstall-ylibaiobcflexnet-tools3.安装rpm-ivhoracle-xe-11.2.0-1.0.x86_64.rpm4.配置OralceOracleApplicationExpress的有效HTTP端口（默认值为8080）Oracle数据库侦听器的有效端口（默认为1521）SYS和SYSTEM管理员帐户密码：123456确认SYS和SYSTEM管理员帐户的密码：123456数据库在计算机启动时自动启动（下次重新引导）echo-e&quot;\\n\\n123456\\n123456\\ny&quot;|/etc/init.d/oracle-xeconfigure5.环境变量配置cat&gt;&gt;.bash_profile&lt;&lt;EOF./u01/app/oracle/product/11.2.0/xe/bin/oracle_env.shEOF让环境变量生效su-6.允许远程访问Oracle11gXEGUI进入SQL命令窗口sqlplus&quot;sys/123456assysdba&quot;&lt;&lt;EOFEXECDBMS_XDB.SETLISTENERLOCALACCESS(FALSE);EOF7.直接关闭防火墙systemctlstopfirewalldsystemctldisablefirewalld可通下面网址访问确认安装成功http://&lt;server-ip&gt;:8080/apex/f?p=4950:1用户名：system密码：123456"}, "md/tools/部署SVN.html": {"url": "md/tools/部署SVN.html", "title": "部署 SVN", "keywords": "", "body": "CentOS7上部署ApacheSubversion（SVN）服务器ApacheSubversion（SVN）是一种广泛使用的版本控制解决方案，可帮助存储各种版本的文件，如源代码和文档。在本文中，我将介绍如何使用ApacheSubversion和Apache在CentOS7服务器实例上构建SVN服务器。1.先决条件CentOS7（最小化安装，但不是必需）。一个sudo用户登录（直接使用root亦可）。非root用户请在命令前加sudo。2.安装Apache使用YUM安装Apache：yuminstall-yhttpd删除Apache的默认欢迎页面：sed-i&#39;s/^/#&amp;/g&#39;/etc/httpd/conf.d/welcome.conf防止Apache在/var/www/html目录中显示文件：sed-i&quot;s/OptionsIndexesFollowSymLinks/OptionsFollowSymLinks/&quot;/etc/httpd/conf/httpd.conf3.安装SVN和mod_dav_svn模块要使SVN与Apache配合使用，需要安装除SVN之外的Apache模块moddavsvn：yuminstall-ysubversionmod_dav_svn4.配置SVN修改SVN配置文件vi/etc/httpd/conf.modules.d/10-subversion.confcat&gt;&gt;/etc/httpd/conf.modules.d/10-subversion.conf&lt;&lt;EOF&lt;Location/svn&gt;DAVsvnSVNParentPath/svnAuthName&quot;SVNRepos&quot;AuthTypeBasicAuthUserFile/etc/svn/svn-authAuthzSVNAccessFile/svn/authzRequirevalid-user&lt;/Location&gt;EOF注意：在此配置中，我们指定了一个HTTP访问认证文件/etc/svn/svn-auth和用户权限控制文件/svn/authz。两者都将在以后创建。创建SVN仓库mkdir/svncd/svnsvnadmincreaterepo1chown-Rapache:apacherepo1设置SVN用户帐号使用以下命令创建HTTP访问认证文件/svn/svn-auth和SVN用户帐户user001：mkdir/etc/svnhtpasswd-cm/etc/svn/svn-authuser001chownroot:apache/etc/svn/svn-authchmod640/etc/svn/svn-auth如果要创建更多SVN用户帐户，请参阅以下命令：htpasswd-m/etc/svn/svn-authuser002htpasswd-m/etc/svn/svn-authuser003警告：现在不要使用-c标志，否则将重建身份验证文件，并清除之前设置的所有用户帐户。为用户设置权限cp/svn/repo1/conf/authz/svn/authzvi/svn/authz假设：用户user001是管理员。用户user002具有读写权限。用户user003只能读。然后，可以修改以下设置：[groups]admin=user001repo1_user=user002repo1_trainee=user003[/]@admin=rw[repo1:/]@repo1_user=rw@repo1_trainee=r保存并退出：:wq启动Apache并修改防火墙规则启动Apache：systemctlstarthttpd.servicesystemctlenablehttpd.service打开HTTP服务端口：firewall-cmd--zone=public--permanent--add-service=httpfirewall-cmd--reload最后，使用以下路径从SVN客户端访问服务器上的SVNreporepo1：http://&lt;your-server-ip&gt;/svn/repo1/教程结束了。谢谢阅读。"}, "md/tools/大商创环境部署.html": {"url": "md/tools/大商创环境部署.html", "title": "DSC 环境部署 教学环境", "keywords": "", "body": "DSC环境部署（教学环境）1.关闭SELinuxsetenforce0sed-i&#39;s/SELINUX=enforcing/SELINUX=disabled/&#39;/etc/selinux/config2.部署本地yum源rm-rf/etc/yum.repos.d/*curl-o/etc/yum.repos.d/CentOS-Base.repohttp://192.168.2.251/Centos/CentOS7.repoyumcleanallyummakecache3.安装Nginxyuminstall-ynginx4.配置防火墙firewall-cmd--add-port=80/tcp--permanentfirewall-cmd--add-port=3306/tcp--permanentfirewall-cmd--reload5.安装mariadbyuminstall-ymariadb-servermariadb6.安装PHP5.6yuminstall-yphp56wphp56w-mysqlphp56w-gdphp56w-imapphp56w-ldapphp56w-odbcphp56w-pearphp56w-xmlphp56w-xmlrpcphp56w-mbstringphp56w-mcryptphp56w-bcmathphp56w-mhashphp56w-fpmphp56w-opcache7.配置PHP环境sed-i&#39;s/^;date.timezone=/date.timezone=PRC/&#39;/etc/php.inised-i&#39;s/^;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/&#39;/etc/php.inised-i&#39;s/127.0.0.1:9000/\\/var\\/run\\/php-fpm\\/php-fpm.sock/&#39;/etc/php-fpm.d/www.confsed-i&#39;s/;listen.owner=nobody/listen.owner=nginx/&#39;/etc/php-fpm.d/www.confsed-i&#39;s/;listen.group=nobody/listen.group=nginx/&#39;/etc/php-fpm.d/www.confsed-i&#39;s/;user=apache/user=nginx/&#39;/etc/php-fpm.d/www.confsed-i&#39;s/group=apache/group=nginx/&#39;/etc/php-fpm.d/www.confsed-i&#39;s/;request_terminate_timeout=0/request_terminate_timeout=300/&#39;/etc/php-fpm.d/www.conf8.启动php-fpmsystemctlstartphp-fpmchmod666/var/run/php-fpm/php-fpm.sockchownnginx:nginx/var/run/php-fpm/php-fpm.sock9.配置Nginx(cat&lt;&lt;EOFindexindex.phpindex.htmlindex.htm;server_namelocation;#passthePHPscriptstoFastCGIserverlisteningonthephp-fpmsocketlocation~\\.php${try_files\\$uri=404;fastcgi_passunix:/run/php-fpm/php-fpm.sock;fastcgi_indexindex.php;fastcgi_paramSCRIPT_FILENAME\\$document_root\\$fastcgi_script_name;includefastcgi_params;}EOF)&gt;/etc/nginx/default.d/default.conf(cat&lt;&lt;EOFproxy_buffer_size128k;proxy_buffers3232k;proxy_busy_buffers_size128k;proxy_temp_file_write_size128k;fastcgi_buffers1616k;fastcgi_buffer_size32k;EOF)&gt;/etc/nginx/conf.d/nginx.conf10.配置ZG解密插件(cat&lt;&lt;EOFzend_extension=/usr/lib64/php/modules/ZendGuardLoader.sozend_extension=/usr/lib64/php/modules/opcache.sozend_loader.enable=1zend_loader.license_path=EOF)&gt;/etc/php.d/ZendGuard.inicurl-Ohttp://192.168.2.251/Centos/ZendGuard/ZendGuardLoader.so-Ohttp://192.168.2.251/Centos/ZendGuard/opcache.somv-fZendGuardLoader.soopcache.so-t/usr/lib64/php/modules/11.解压dsccurl-Ohttp://192.168.2.251/Centos/dsc/dsc.tar.gztarzxvfdsc.tar.gzmv-fdsc//usr/share/nginx/html/chmod-R777/usr/share/nginx/html/dsc12.启动数据库systemctlstartmariadbecho-e&quot;\\ny\\n123456\\n123456\\ny\\nn\\nn\\ny&quot;|mysql_secure_installationmysql-uroot-p123456-e&quot;usemysql;grantallprivilegeson*.*to&#39;root&#39;@&#39;%&#39;identifiedby&#39;123456&#39;withgrantoption;flushprivileges;&quot;13.配置开机启动systemctlenablephp-fpmsystemctlenablenginxsystemctlenablemariadbsystemctlrestartphp-fpmsystemctlstartnginx14.授权phpsessionchownapache/var/lib/php/sessionchmod700/var/lib/php/session15.安装浏览器访问服务器ip/dsc进行安装。数据库账号：root、密码：12345616.一键部署setenforce0sed-i&#39;s/SELINUX=enforcing/SELINUX=disabled/&#39;/etc/selinux/configrm-rf/etc/yum.repos.d/*curl-o/etc/yum.repos.d/CentOS-Base.repohttp://192.168.2.251/Centos/CentOS7.repoyumcleanallyummakecacheyuminstall-ynginxfirewall-cmd--add-port=80/tcp--permanentfirewall-cmd--add-port=3306/tcp--permanentfirewall-cmd--reloadyuminstall-ymariadb-servermariadbyuminstall-yphp56wphp56w-mysqlphp56w-gdphp56w-imapphp56w-ldapphp56w-odbcphp56w-pearphp56w-xmlphp56w-xmlrpcphp56w-mbstringphp56w-mcryptphp56w-bcmathphp56w-mhashphp56w-fpmphp56w-opcachesed-i&#39;s/^;date.timezone=/date.timezone=PRC/&#39;/etc/php.inised-i&#39;s/^;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/&#39;/etc/php.inised-i&#39;s/127.0.0.1:9000/\\/var\\/run\\/php-fpm\\/php-fpm.sock/&#39;/etc/php-fpm.d/www.confsed-i&#39;s/;listen.owner=nobody/listen.owner=nginx/&#39;/etc/php-fpm.d/www.confsed-i&#39;s/;listen.group=nobody/listen.group=nginx/&#39;/etc/php-fpm.d/www.confsed-i&#39;s/;user=apache/user=nginx/&#39;/etc/php-fpm.d/www.confsed-i&#39;s/group=apache/group=nginx/&#39;/etc/php-fpm.d/www.confsystemctlstartphp-fpmchmod666/var/run/php-fpm/php-fpm.sockchownnginx:nginx/var/run/php-fpm/php-fpm.sock(cat&lt;&lt;EOFindexindex.phpindex.htmlindex.htm;server_namelocation;#passthePHPscriptstoFastCGIserverlisteningonthephp-fpmsocketlocation~\\.php${try_files\\$uri=404;fastcgi_passunix:/run/php-fpm/php-fpm.sock;fastcgi_indexindex.php;fastcgi_paramSCRIPT_FILENAME\\$document_root\\$fastcgi_script_name;includefastcgi_params;}EOF)&gt;/etc/nginx/default.d/default.conf(cat&lt;&lt;EOFproxy_buffer_size128k;proxy_buffers3232k;proxy_busy_buffers_size128k;proxy_temp_file_write_size128k;fastcgi_buffers1616k;fastcgi_buffer_size32k;EOF)&gt;/etc/nginx/conf.d/nginx.conf(cat&lt;&lt;EOFzend_extension=/usr/lib64/php/modules/ZendGuardLoader.sozend_extension=/usr/lib64/php/modules/opcache.sozend_loader.enable=1zend_loader.license_path=EOF)&gt;/etc/php.d/ZendGuard.inicurl-Ohttp://192.168.2.251/Centos/ZendGuard/ZendGuardLoader.so-Ohttp://192.168.2.251/Centos/ZendGuard/opcache.somv-fZendGuardLoader.soopcache.so-t/usr/lib64/php/modules/curl-Ohttp://192.168.2.251/Centos/dsc/dsc.tar.gztarzxvfdsc.tar.gzmv-fdsc//usr/share/nginx/html/chmod-R777/usr/share/nginx/html/dscsystemctlstartmariadbecho-e&quot;\\ny\\n123456\\n123456\\ny\\nn\\nn\\ny&quot;|mysql_secure_installationmysql-uroot-p123456-e&quot;usemysql;grantallprivilegeson*.*to&#39;root&#39;@&#39;%&#39;identifiedby&#39;123456&#39;withgrantoption;flushprivileges;&quot;systemctlenablephp-fpmsystemctlenablenginxsystemctlenablemariadbsystemctlrestartphp-fpmsystemctlstartnginxchownapache/var/lib/php/sessionchmod700/var/lib/php/session"}, "md/tools/持续集成环境.html": {"url": "md/tools/持续集成环境.html", "title": "Jenkins 部署", "keywords": "", "body": "CentOS7部署Jenkins持续集成环境詹金斯是一种流行的开源CI（持续集成）工具，广泛用于项目开发，部署和自动化。本文将引导你完成在CentOS7服务器实例上安装Jenkins的过程。1.先决条件在继续之前，你必须具备：从零开始部署了CentOS7服务器实例。root权限2.部署阿里云源curl-o/etc/yum.repos.d/CentOS-Base-ali.repohttp://mirrors.aliyun.com/repo/Centos-7.repocurl-o/etc/yum.repos.d/epel-7-ali.repohttp://mirrors.aliyun.com/repo/epel-7.repoyumcleanallyummakecache3.安装Java在安装Jenkins之前，需要在系统上安装一个Java虚拟机。在这里，让我们使用yum安装最新的JDK：yuminstall-yjava安装完成后，可以通过运行以下命令进行确认：java-version4.安装Jenkinscurl-o/etc/yum.repos.d/jenkins.repohttp://pkg.jenkins-ci.org/redhat-stable/jenkins.reporpm--importhttp://pkg.jenkins-ci.org/redhat-stable/jenkins-ci.org.key使用官方的yum安装最新的稳定版本的Jenkins：yuminstall-yjenkins启动Jenkins服务并将其设置为在启动时运行：systemctlstartjenkins.servicesystemctlenablejenkins.service为了允许访问者访问Jenkins，你需要允许端口8080上的入站流量：firewall-cmd--zone=public--permanent--add-port=8080/tcpfirewall-cmd--reload现在，通过从浏览器访问以下地址来访问Jenkins：http://服务器IP:80804.1.基本配置解锁jenkins根据提示使用cat命令查看密码cat/var/lib/jenkins/secrets/initialAdminPassword自定义JenkinsJenkins插件自动从网络下载安装，由于插件服务器在国外，会产生网络延迟问题导致安装失败。因此选择选择插件来安装。本次我们将不选择任何插件以快速安装，后期将通过插件管理器安装所需插件。创建第一个管理员用户实例配置可修改地址与端口，不建议修改。保持默认。插件安装系统管理-&gt;管理插件-&gt;可选插件-&gt;过滤HTMLPublisherWorkspaceCleanupSubversionStartupTriggerGroovy5.部署Python3部署编译环境yum-ygroupinstall&#39;DevelopmentTools&#39;yum-yinstallzlibzlib-devellibffi-developenssl-develPython官网下载最新版Python源代码。本文以Python-3.7.2为例cd/tmpcurl-Ohttps://www.python.org/ftp/python/3.7.2/Python-3.7.2.tgztarxfPython-3.7.2.tgzPython配置./Python-3.7.2/configure构建并安装Python3makeinstallPython-3.7.2确认Python3部署成功python3--version安装自动化依赖Python相关库pip3installseleniumpip3installddtpip3installhtmlreportpip3list6.Jenkins相关配置文件/etc/sysconfig/jenkins默认启用8080日志/var/log/jenkins/jenkins.log服务状态systemctlstatusjenkins启动服务systemctlstartjenkins停止服务systemctlstopjenkins重启服务systemctlrestartjenkins"}, "md/tools/持续集成环境-教学环境.html": {"url": "md/tools/持续集成环境-教学环境.html", "title": "Jenkins 部署 教学环境", "keywords": "", "body": "CentOS7部署Jenkins持续集成环境（教学环境）詹金斯是一种流行的开源CI（持续集成）工具，广泛用于项目开发，部署和自动化。本文将引导你完成在CentOS7服务器实例上安装Jenkins的过程。1.先决条件在继续之前，你必须具备：从零开始部署了CentOS7服务器实例。root权限2.部署本地yum源rm-rf/etc/yum.repos.d/*curl-o/etc/yum.repos.d/CentOS-Base.repohttp://192.168.2.251/Centos/CentOS7.repoyumcleanallyummakecache3.安装Java在安装Jenkins之前，需要在系统上安装一个Java虚拟机。在这里，让我们使用yum安装最新的JDK：yuminstall-yjava安装完成后，可以通过运行以下命令进行确认：java-version4.安装Jenkins使用yum安装Jenkins：yuminstall-yjenkins启动Jenkins服务并将其设置为在启动时运行：systemctlstartjenkins.servicesystemctlenablejenkins.service为了允许访问者访问Jenkins，你需要允许端口8080上的入站流量：firewall-cmd--zone=public--permanent--add-port=8080/tcpfirewall-cmd--reload现在，通过从浏览器访问以下地址来访问Jenkins：http://服务器IP:80804.1.基本配置解锁jenkins根据提示使用cat命令查看密码cat/var/lib/jenkins/secrets/initialAdminPassword自定义JenkinsJenkins插件自动从网络下载安装，由于插件服务器在国外，会产生网络延迟问题导致安装失败。因此选择选择插件来安装。本次我们将不选择任何插件以快速安装，后期将通过插件管理器安装所需插件。创建第一个管理员用户实例配置可修改地址与端口，不建议修改。保持默认。插件安装系统管理-&gt;管理插件-&gt;可选插件-&gt;过滤HTMLPublisherWorkspaceCleanupSubversionStartupTriggerGroovy5.部署Python3部署编译环境yum-ygroupinstall&#39;DevelopmentTools&#39;yum-yinstallzlibzlib-devellibffi-developenssl-develPython官网下载最新版Python源代码。本文以Python-3.7.2为例cd/tmpcurl-Ohttp://192.168.2.251/Centos/python/Python-3.7.2.tgztarxfPython-3.7.2.tgzPython配置./Python-3.7.2/configure构建并安装Python3makeinstallPython-3.7.2确认Python3部署成功python3--version安装自动化依赖Python相关库pip3installseleniumpip3installddtpip3installhtmlreportpip3list6.Jenkins相关配置文件/etc/sysconfig/jenkins默认启用8080日志/var/log/jenkins/jenkins.log服务状态systemctlstatusjenkins启动服务systemctlstartjenkins停止服务systemctlstopjenkins重启服务systemctlrestartjenkins"}}